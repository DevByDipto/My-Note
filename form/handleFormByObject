  const handleUpdateCoffee = e =>{
        e.preventDefault();
        const form = e.target
      
        const formData = new FormData(form);
  const data = Object.fromEntries(formData.entries());

console.log(data);

    }


    // const formData = new FormData(form);
//   const data = Object.fromEntries(formData.entries());
// ai code ti step by step bujiye bolo keno  new FormData,Object.fromEntries,formData.entries() use korsi? kivabe kaj korew aiti ? formData  er valu to {} dekhacche tahole pore kivabe data te data dekhacche?


// ChatGPT said:
// ржЦрзБржм ржнрж╛рж▓рзЛ ржкрзНрж░рж╢рзНржи! ржЪрж▓рзЛ ржПржЗ рж▓рж╛ржЗржи ржжрзБржЯрзЛ:

// js
// Copy
// Edit
// const formData = new FormData(form);
// const data = Object.fromEntries(formData.entries());
// ржЖржорж░рж╛ step by step ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЗ ржмрзБржЭрзЗ ржирж┐ржЗтАФржПржЗ ржжрзБржЗ рж▓рж╛ржЗржирзЗ ржХрзА рж╣ржЪрзНржЫрзЗ, ржХрзЗржи new, FormData, .entries(), ржПржмржВ Object.fromEntries() ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ, ржЖрж░ ржХрж┐ржнрж╛ржмрзЗ рж╢рзЗрж╖ржорзЗрж╢ data рждрзЗ form-ржПрж░ рждржерзНржп ржЖрж╕рзЗред

// ЁЯФН Step-by-Step ржмрж┐рж╢рзНрж▓рзЗрж╖ржг
// тЬЕ Step 1: const formData = new FormData(form);
// ЁЯФз ржПржЦрж╛ржирзЗ ржХрзА рж╣ржЪрзНржЫрзЗ?
// FormData рж╣рж▓рзЛ ржПржХржЯрж╛ built-in JavaScript API, ржпрзЗржЯрж╛ form-ржПрж░ рж╕ржм input field-ржПрж░ data automatically ржзрж░рзЗред

// new FormData(form) ржПрж░ ржорж╛ржирзЗ рж╣рж▓рзЛ тАФ form DOM element ржерзЗржХрзЗ рж╕ржм name-value ржкрзЗрзЯрж╛рж░ рждрзБрж▓рзЗ ржЖржирзЛред

// ржПржЯрж┐ form ржПрж░ ржнрж┐рждрж░рзЗрж░ <input name="...">, <textarea>, <select> ржЗрждрзНржпрж╛ржжрж┐рж░ ржорж╛ржи ржЧрзБрж▓рзЛ ржзрж░рзЗ ржлрзЗрж▓рзЗред

// ЁЯУж Output:
// ржПржЯрж┐ ржПржХржЯрж┐ FormData object рждрзИрж░рж┐ ржХрж░рзЗред ржПржЗ object-ржПрж░ ржнрж┐рждрж░рзЗ ржХрзА ржЖржЫрзЗ?

// js
// Copy
// Edit
// formData = FormData {
//   name: "Alice",
//   email: "alice@example.com"
// }
// рждржмрзЗ ржоржирзЗ рж░рж╛ржЦрзЛ тАУ FormData ржжрзЗржЦрж▓рзЗ ржжрзЗржЦрждрзЗ {} ржЦрж╛рж▓рж┐ ржжрзЗржЦрж╛рзЯ, ржХрж╛рж░ржг ржПржЯрж┐ iterable, ржХрж┐ржирзНрждрзБ plain object ржирж╛ред рждрж╛ржЗ console.log(formData) ржжрж┐рж▓рзЗ рждрзБржорж┐ ржЦрж╛рж▓рж┐ {} ржжрзЗржЦрждрзЗ ржкрж╛рж░рзЛ тАФ ржПржЯрж╛ debugger-friendly ржирж╛, ржХрж┐ржирзНрждрзБ ржнрж┐рждрж░рзЗ data ржЖржЫрзЗред

// тЬЕ Step 2: formData.entries()
// ЁЯФз ржПржЦрж╛ржирзЗ ржХрзА рж╣ржЪрзНржЫрзЗ?
// .entries() method FormData ржПрж░ ржнрж┐рждрж░рзЗ ржерж╛ржХрж╛ рж╕ржм data ржХрзЗ [key, value] ржкрзЗрзЯрж╛рж░ рж╣рж┐рж╕рзЗржмрзЗ return ржХрж░рзЗ ржПржХржЯрж╛ iterator ржЖржХрж╛рж░рзЗред

// js
// Copy
// Edit
// formData.entries() 
// // Output: iterator -> [["name", "Alice"], ["email", "alice@example.com"]]
// тЬЕ Step 3: Object.fromEntries(formData.entries());
// ЁЯФз ржПржЦрж╛ржирзЗ ржХрзА рж╣ржЪрзНржЫрзЗ?
// Object.fromEntries() ржПржХржЯрж╛ array of key-value pairs ржХрзЗ plain JavaScript object-ржП рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рзЗред

// js
// Copy
// Edit
// Object.fromEntries([
//   ["name", "Alice"],
//   ["email", "alice@example.com"]
// ]);

// // Output:
// {
//   name: "Alice",
//   email: "alice@example.com"
// }
// ЁЯФБ ржкрзБрж░рзЛ ржХрж╛ржЬрзЗрж░ flow:
// тЬЕ new FormData(form) тЖТ form ржПрж░ рж╕ржм input field collect ржХрж░рзЗред

// тЬЕ .entries() тЖТ key-value ржкрзЗрзЯрж╛рж░ рждрзИрж░рж┐ ржХрж░рзЗред

// тЬЕ Object.fromEntries(...) тЖТ рж╕ржмржХрзЗ object ржмрж╛ржирж┐рзЯрзЗ ржлрзЗрж▓рзЗред

// тЭУ ржкрзНрж░рж╢рзНржи: formData ржПрж░ ржоржзрзНржпрзЗ рждрзЛ {} ржжрзЗржЦрж╛ржЪрзНржЫрзЗ тАФ ржХрж┐ржирзНрждрзБ data рждрзЗ ржарж┐ржХ data ржЖрж╕ржЫрзЗ ржХрзЗржи?
// ржХрж╛рж░ржг:

// formData рж╣рж▓рзЛ FormData instance, ржУржЯрж╛ iterable рж╣рж▓рзЗржУ console.log() ржП {} ржжрзЗржЦрж╛рзЯ (debugger-friendly ржирж╛)ред

// ржХрж┐ржирзНрждрзБ .entries() method ржжрж┐рзЯрзЗ рждрзБржорж┐ рждрж╛рж░ ржнрзЗрждрж░рзЗрж░ ржЬрж┐ржирж┐рж╕ access ржХрж░рждрзЗ ржкрж╛рж░рзЛред

// ржПрж░ржкрж░ Object.fromEntries() рж╕рзЗржЯрж╛ object ржмрж╛ржирж┐рзЯрзЗ ржжрзЗрзЯред

// тЬЕ ржЫрзЛржЯрзНржЯ ржЙржжрж╛рж╣рж░ржг:
// html
// Copy
// Edit
// <form id="myForm">
//   <input name="username" value="dipto" />
//   <input name="age" value="24" />
// </form>
// js
// Copy
// Edit
// const form = document.getElementById('myForm');

// form.addEventListener('submit', (e) => {
//   e.preventDefault();
//   const formData = new FormData(form);
//   const data = Object.fromEntries(formData.entries());
//   console.log(data); // ЁЯСЙ { username: 'dipto', age: '24' }
// });
// ЁЯФЪ рж╢рзЗрж╖ ржХржерж╛:
// ЁЯФ╣ FormData = ржлрж░рзНржорзЗрж░ data рждрзЛрж▓рж╛рж░ ржХрж╛ржЬ
// ЁЯФ╣ .entries() = key-value pair ржмрзЗрж░ ржХрж░рж╛рж░ ржХрж╛ржЬ
// ЁЯФ╣ Object.fromEntries() = ржПржХрзЗ normal object ржмрж╛ржирж╛ржирзЛрж░ ржХрж╛ржЬ

// рждрзБржорж┐ ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ diagram ржмрж╛ ржЪрж┐рждрзНрж░ ржжрж┐рзЯрзЗ ржПржЗ flow ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рж┐ред ржжрж░ржХрж╛рж░ рж╣рж▓рзЗ ржмрж▓рзЛ тАФ ржЖржорж┐ ржХрж░рзЗ ржжрж┐ржмред








// You said:
// tumi bolla j FormData data tular kaj kore abong formData = FormData {
//   name: "Alice",
//   email: "alice@example.com"
// } amn kichu kore to aita to akta object aita theke direct data access korle problem kii ?


// ChatGPT said:
// рждрзЛржорж╛рж░ ржкрзНрж░рж╢рзНржиржЯрж╛ ржЪржорзОржХрж╛рж░ рж╣рзЯрзЗржЫрзЗ тАФ рждрзБржорж┐ ржЦрзБржм рж╕ржарж┐ржХ ржЬрж╛рзЯржЧрж╛рзЯ ржЦрзЛржБржЪрж╛ ржжрж┐рзЯрзЗржЫрзЛред
// рждрзБржорж┐ ржмрж▓ржЫрзЛ:

// formData = FormData { name: "Alice", email: "alice@example.com" } тАФ ржПржЯрж╛ рждрзЛ ржжрзЗржЦрждрзЗ object, рждрж╛рж╣рж▓рзЗ direct .name ржмрж╛ .email ржжрж┐рзЯрзЗ access ржХрж░рждрзЗ ржкрж╛рж░рж┐ ржирж╛ ржХрзЗржи?

// ржПржЗ ржЬрж┐ржирж┐рж╕ржЯрж╛ ржПржХржжржо clear ржХрж░рж╛ ржжрж░ржХрж╛рж░ред ржЪрж▓рзЛ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзБржЭрзЗ ржирзЗржЗ:

// тЬЕ FormData ржЖрж╕рж▓рзЗ object ржирж╛, special class instance
// js
// Copy
// Edit
// const formData = new FormData(form);
// ржПржЗ formData ржжрзЗржЦрждрзЗ {} ржПрж░ ржорждрзЛ ржоржирзЗ рж╣рж▓рзЗржУ, ржПржЯрж╛ ржЖрж╕рж▓рзЗ ржПржХржЯрж╛ FormData instance, ржпрзЗржЯрж╛ internally iterable рж╣рж▓рзЗржУ plain object ржирж╛ред ржПржЬржирзНржп:

// js
// Copy
// Edit
// console.log(formData.name); // тЭМ ржХрж╛ржЬ ржХрж░ржмрзЗ ржирж╛
// console.log(formData["name"]); // тЭМ ржХрж╛ржЬ ржХрж░ржмрзЗ ржирж╛
// рждрзБржорж┐ .get("name") ржЕржержмрж╛ .entries() ржжрж┐рзЯрзЗ access ржХрж░рждрзЗ ржкрж╛рж░рзЛ:

// js
// Copy
// Edit
// formData.get("name"); // тЬЕ dipto
//     //

    